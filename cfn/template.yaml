AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a static website using S3 and CloudFront

Parameters:
  DomainName:
    Type: String
  AcmCertificate:
    Type: String

Resources:

  # The S3 bucket that will receive the app static files
  NextBucket:
    Type: AWS::S3::Bucket

  # Origin access identity (OAI) that will be used by the policy to allow CloudFront to access the S3 bucket
  NextOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Origin Access Identity for Next static resources in S3 bucket

  # Policy allowing CloudFront to get objects from the S3 bucket
  NextBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NextBucket
      PolicyDocument:
        Id: next-s3-bucket-policy
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt NextOriginAccessIdentity.S3CanonicalUserId
            Resource: !Sub arn:aws:s3:::${NextBucket}/*

  # A custom cache policy for our static files : minimum 1 minute of caching, max 1 year
  NextServerCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: next-cf-cache-policy
        DefaultTTL: 60 # 1 minute
        MinTTL: 60 # 1 minute
        MaxTTL: 31536000 # one year
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true

  # The CloudFront Distribution
  Distribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - NextBucket
      - NextOriginAccessIdentity
    Properties:
      DistributionConfig:
        Origins:
          - Id: next-s3-origin
            DomainName: !GetAtt NextBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${NextOriginAccessIdentity}
        Enabled: true
        HttpVersion: http2and3
        DefaultRootObject: 'index'
        CustomErrorResponses:
          # when there's a 403 error in the S3 origin, it means that the file is not found
          - ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: /404
        DefaultCacheBehavior:
          TargetOriginId: next-s3-origin
          CachePolicyId: !Ref NextServerCachePolicy # we're using our custom cache policy
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          Compress: true
          AllowedMethods:
            - GET
            - HEAD
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificate
          SslSupportMethod: sni-only
        Aliases:
          - !Ref DomainName

  # Alias from our domain name to the CloudFront distribution
  DNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join ['', [!Ref DomainName, .]]
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget-1.html#cfn-route53-aliastarget-hostedzoneid
            DNSName: !GetAtt Distribution.DomainName

Outputs:
  NextBucket:
    Value: !Ref NextBucket
  DistributionId:
    Value: !Ref Distribution